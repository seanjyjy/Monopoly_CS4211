handleP1Buy(piece) = pcase {
	4: {board[position[piece][0]][0] = piece} ->  roll((piece + 1) % 2)
	1:  roll((piece + 1) % 2)
};

handleP2Buy(piece) = pcase {
	1: {board[position[piece][0]][0] = piece} ->  roll((piece + 1) % 2)
	1:  roll((piece + 1) % 2)
};

decideBuy(piece) = [piece == p1] handleP1Buy(piece)
				   []
				   [piece == p2] handleP2Buy(piece);
					

payRent(piece) = rentPay.piece {
	position[piece][1] = position[piece][1] - board[position[piece][0]][2];
	position[board[position[piece][0]][0]][1] = position[board[position[piece][0]][0]][1] + board[position[piece][0]][2];
} -> roll((piece + 1) % 2);

